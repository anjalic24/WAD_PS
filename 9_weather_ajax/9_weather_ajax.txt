----HTML----
<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0"/>
  <title>Weather Application</title>
  <link rel="stylesheet" href="styles.css" />
</head>
<body>

  <div class="container">
    <h2>Weather Application</h2>
    <label for="cityName">Enter City Name:</label>
    <input type="text" id="cityName" placeholder="e.g., Tokyo" />
    <button onclick="getWeatherData()">Get Weather</button>

    <div id="weatherResult" class="result"></div>
  </div>

  <script src="script.js"></script>
</body>
</html>


----CSS----
body {
  background-color: #f0f8ff;
  font-family: Arial, sans-serif;
  margin: 0;
  padding: 0;
}

.container {
  max-width: 400px;
  margin: 80px auto;
  background: #fff;
  padding: 30px;
  border-radius: 10px;
  box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
  text-align: center;
}

label {
  display: block;
  margin-bottom: 8px;
  font-weight: bold;
}

input[type="text"] {
  width: 100%;
  padding: 10px;
  margin-bottom: 15px;
  border-radius: 4px;
  border: 1px solid #ccc;
  font-size: 16px;
}

button {
  width: 100%;
  padding: 10px;
  background-color: #007bff;
  color: white;
  font-size: 16px;
  border: none;
  border-radius: 4px;
  cursor: pointer;
}

button:hover {
  background-color: #0056b3;
}

.weather-card {
  padding: 20px;
  margin-top: 20px;
  border-radius: 10px;
  background-color: #f9f9f9;
  border: 1px solid #ddd;
  text-align: left;
}

.weather-card h3 {
  margin-bottom: 10px;
  color: #007bff;
}

.error-message {
  color: red;
  font-weight: bold;
  margin-top: 20px;
}

.loading {
  color: #007bff;
  margin-top: 20px;
}

----JS-----
function getWeatherData() {
  const cityInput = document.getElementById("cityName").value.trim().toLowerCase();
  const result = document.getElementById("weatherResult");
  result.innerHTML = "";

  if (!cityInput) {
    result.innerHTML = '<p class="error-message">Please enter a city name.</p>';
    return;
  }

  result.innerHTML = '<p class="loading">Loading...</p>';

  const xhr = new XMLHttpRequest();
  xhr.open("GET", "data.json", true);

  xhr.onload = function () {
    if (xhr.status === 200) {
      try {
        const data = JSON.parse(xhr.responseText);
        const matchedCity = Object.keys(data).find(
          city => city.toLowerCase() === cityInput
        );

        if (matchedCity) {
          const weather = data[matchedCity];
          result.innerHTML = `
            <div class="weather-card">
              <h3>${matchedCity}</h3>
              <p><strong>Temperature:</strong> ${weather.temperature}Â°C</p>
              <p><strong>Humidity:</strong> ${weather.humidity}%</p>
              <p><strong>Conditions:</strong> ${weather.conditions}</p>
            </div>
          `;
        } else {
          result.innerHTML = '<p class="error-message">City not found.</p>';
        }
      } catch {
        result.innerHTML = '<p class="error-message">Error processing data.</p>';
      }
    } else {
      result.innerHTML = '<p class="error-message">Failed to fetch data.</p>';
    }
  };

  xhr.send();
}

----JSON----
{
  "New York": {
    "temperature": 22,
    "humidity": 65,
    "conditions": "Cloudy"
  },
  "London": {
    "temperature": 18,
    "humidity": 72,
    "conditions": "Rainy"
  },
  "Tokyo": {
    "temperature": 25,
    "humidity": 60,
    "conditions": "Clear"
  },
  "Paris": {
    "temperature": 20,
    "humidity": 55,
    "conditions": "Partly Cloudy"
  },
  "Delhi": {
    "temperature": 30,
    "humidity": 50,
    "conditions": "Sunny"
  }
}

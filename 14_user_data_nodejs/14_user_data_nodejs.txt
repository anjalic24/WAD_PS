npm init -y
npm install express
node server.js
npm start

---server.js---
const express = require('express');
const path = require('path');
const fs = require('fs').promises;

const app = express();
const PORT = process.env.PORT || 3000;

// Middleware
app.use(express.static(path.join(__dirname, 'public')));

// API Endpoint
app.get('/api/users', async (req, res) => {
    try {
        const data = await fs.readFile(path.join(__dirname, 'users.json'));
        const users = JSON.parse(data);
        res.json(users);
    } catch (err) {
        console.error('Error reading users:', err);
        res.status(500).json({ error: 'Failed to load user data' });
    }
});

// Start Server
app.listen(PORT, () => {
    console.log(`Server running on http://localhost:${PORT}`);
    console.log(`API available at http://localhost:${PORT}/api/users`);
});


----users.json----
[
  {
      "id": 1,
      "name": "Alice Johnson",
      "email": "alice@example.com",
      "role": "Developer"
  },
  {
      "id": 2,
      "name": "Bob Smith",
      "email": "bob@example.com",
      "role": "Designer"
  },
  {
      "id": 3,
      "name": "Charlie Brown",
      "email": "charlie@example.com",
      "role": "Manager"
  }
]

-----public/index.html-----
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>User Data Viewer</title>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            max-width: 800px;
            margin: 0 auto;
            padding: 20px;
        }
        h1 {
            color: #2c3e50;
            text-align: center;
        }
        .user-table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
            box-shadow: 0 2px 3px rgba(0,0,0,0.1);
        }
        .user-table th, .user-table td {
            padding: 12px 15px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }
        .user-table th {
            background-color: #3498db;
            color: white;
        }
        .user-table tr:hover {
            background-color: #f5f5f5;
        }
        .loading {
            text-align: center;
            font-style: italic;
            color: #7f8c8d;
        }
    </style>
</head>
<body>
    <h1>User Data Dashboard</h1>
    <div id="loading" class="loading">Loading user data...</div>
    <table id="user-table" class="user-table" style="display: none;">
        <thead>
            <tr>
                <th>ID</th>
                <th>Name</th>
                <th>Email</th>
                <th>Role</th>
            </tr>
        </thead>
        <tbody id="user-data"></tbody>
    </table>

    <script src="script.js"></script>
</body>
</html>

----public/script.js-----
document.addEventListener('DOMContentLoaded', async () => {
    try {
        const response = await fetch('/api/users');
        
        if (!response.ok) {
            throw new Error(`HTTP error! status: ${response.status}`);
        }

        const users = await response.json();
        displayUsers(users);
    } catch (error) {
        console.error('Error fetching users:', error);
        document.getElementById('loading').textContent = 
            'Error loading user data. Please try again later.';
    }
});

function displayUsers(users) {
    const tableBody = document.getElementById('user-data');
    const loadingElement = document.getElementById('loading');
    const tableElement = document.getElementById('user-table');

    // Clear loading message
    loadingElement.style.display = 'none';
    
    // Populate table
    users.forEach(user => {
        const row = document.createElement('tr');
        row.innerHTML = `
            <td>${user.id}</td>
            <td>${user.name}</td>
            <td>${user.email}</td>
            <td>${user.role}</td>
        `;
        tableBody.appendChild(row);
    });

    // Show table
    tableElement.style.display = 'table';
}